service: aws-api-starwars

custom:
  documentation: ${file(serverless.doc.yml):documentation}
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  environment:
    PLANETA_DYNAMODB_TABLE: PlanetaDynamoDbTable


plugins:
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-openapi-documentation

functions:
  crearPlaneta:
    handler: src/handler.crearPlaneta
    events:
      - http:
          path: crearPlaneta
          method: post
          documentation: ${file(serverless.doc.yml):endpoints.crearPlaneta}
  obtenerPlanetas:
    handler: src/handler.obtenerPlanetas
    events:
      - http:
          path: obtenerPlanetas
          method: get
  llenarDynamo10x10:
    handler: src/handler.llenarDynamo10x10
    events:
      - http:
          path: llenarDynamo10x10
          method: get


resources:
  Resources:
    PlanetaDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.PLANETA_DYNAMODB_TABLE}
